type Person {

    id: ID!

    firstName: String
    lastName: String

    # address
    street: String
    houseNumber: Int
    zipCode: String
    city: String

    # contact details
    email: String
    telephone: String

    lastModified: String!

    contracts: [Contract!]

}

input PersonInput {

    # can be null to create a new person
    id: ID

    firstName: String
    lastName: String

    # address
    street: String
    houseNumber: Int
    zipCode: String
    city: String

    # contact details
    email: String
    telephone: String

}

type Contract {
    id: ID

    name: String
}

type Query {

    persons: [Person!]

    person( id: ID!): Person

}

type Mutation {

    changePerson(person: PersonInput!): Person!

    addContract(personId: ID, name: String): Contract!

}

type Subscription {

    watchPersons: Person!

}